version: '3.8'

services:
  # Auth Service (Development with hot reload)
  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile
      target: builder
    container_name: rev-auth-service-dev
    ports:
      - "3001:3001"  # gRPC port
      - "3002:3002"  # HTTP port
    environment:
      - NODE_ENV=local
    env_file:
      - .env.local
    volumes:
      - ./apps/auth-service:/app/apps/auth-service
      - ./libs/common:/app/libs/common
      - /app/apps/auth-service/node_modules
      - /app/libs/common/node_modules
      - /app/node_modules
    networks:
      - rev-network
    command: npx nx serve auth-service --watch
    restart: unless-stopped

  # Gateway Service (Development with hot reload)
  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
      target: builder
    container_name: rev-gateway-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=local
    env_file:
      - .env.local
    volumes:
      - ./apps/gateway:/app/apps/gateway
      - ./libs/common:/app/libs/common
      - /app/apps/gateway/node_modules
      - /app/libs/common/node_modules
      - /app/node_modules
    depends_on:
      - auth-service
    networks:
      - rev-network
    command: npx nx serve gateway --watch
    restart: unless-stopped

  # PostgreSQL Database (for development)
  postgres:
    image: postgres:15-alpine
    container_name: rev-postgres-dev
    environment:
      - POSTGRES_DB=rev_db
      - POSTGRES_USER=rev_user
      - POSTGRES_PASSWORD=rev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rev-network
    restart: unless-stopped

  # Redis (for development)
  redis:
    image: redis:7-alpine
    container_name: rev-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rev-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  rev-network:
    driver: bridge
